# sets vagrant version
Vagrant.configure(2) do |config|

  # sets base box Ubuntu for Puppet Master NOTE: the box auto sets HD size to 40Gb
  config.vm.define "cluster_1_Master" do |cluster_1_Master|
    cluster_1_Master.vm.box = "ubuntu/trusty64"
    cluster_1_Master.vm.network "public_network", ip: "192.168.1.250"
    cluster_1_Master.vm.hostname = "masterevilcorp.evilcorp.com"
      # configures VM
      cluster_1_Master.vm.provider :virtualbox do |master|
        master.memory = 4096
        master.name   = "Cluster 1 Master"
        master.gui    = true
      end
    # sets master and all agent FQDN's, hostnames and IP's
    cluster_1_Master.vm.provision :shell, path: "ubuntuBash_master_ipconfig.sh"
    # executes shell file to run bash terminal and comands
    cluster_1_Master.vm.provision :shell, path: "ubuntuBashMaster.sh"
    # install Zabbix on master
    cluster_1_Master.vm.provision :shell, path: "zabbix.sh"
    # modifies puppet.conf to set master autosigning of certs. NEVER USE IN PRODUCTION ENVIRONMENT
    cluster_1_Master.vm.provision :shell, path: "ubuntuBashMaster_puppet_conf.sh"
    # Pulls the repository from git and places the modules into /etc/puppet/modules
    cluster_1_Master.vm.provision :shell, path: "ubuntuBashMaster_git.sh"
    # creates the site.pp file EDIT WHEN ADDING NEW VMs
    cluster_1_Master.vm.provision :shell, path: "ubuntuBashMaster_sitepp.sh"
    # restart puppetmaster service to reload interval config
    #cluster_1_Master.vm.provision :shell, path: "ubuntuBashMaster_service_restart.sh"

  end

    # sets base box Ubuntu for first Agent
  config.vm.define "cluster_2" do |cluster_2|
    cluster_2.vm.box = "ubuntu/trusty64"
    cluster_2.vm.network "public_network", ip: "192.168.1.251"
    cluster_2.vm.hostname = "agent1evilcorp.evilcorp.com"
      # configures VM
      cluster_2.vm.provider :virtualbox do |c2|
        c2.memory = 2048
        c2.name   = "Cluster 2 Agent"
        c2.gui    = true
      end
    # sets master and current agent FQDN's, hostnames and IP's
    cluster_2.vm.provision :shell, path: "ubuntuBash_agent_1_ipconfig.sh"
    # executes shell file to run bash terminal and comands
    cluster_2.vm.provision :shell, path: "ubuntuBash.sh"
    # sets the server and run interval on agent nodes
    #cluster_2.vm.provision :shell, path: "ubuntuBash_agent_puppet_conf.sh"
    # create a certificate key which is sent to the server, server name in file:
    cluster_2.vm.provision :shell, path: "ubuntuBash_puppet_cert_gen.sh"
    # enables agent
    #cluster_2.vm.provision :shell, path: "ubuntuBash_enable.sh"
    # initial pull of modules from master NOTE: BREAKS VAGRANT UP NEW CONF FILE IS THE FIX ^^
    #cluster_2.vm.provision :shell, path: "ubuntuBash_firstrun.sh"
    # restart the service to load the new runinterval
    #cluster_2.vm.provision :shell, path: "ubuntuBash_service_restart.sh"

  end

     # sets base box CentOS for second Agent
#  config.vm.define "cluster_3" do |cluster_3|
#    cluster_3.vm.box = "puppetlabs/centos-7.0-64-nocm" 
#    cluster_3.vm.network "public_network", ip: "192.168.1.252"
#    cluster_3.vm.hostname = "agent2evilcorp.evilcorp.com"
#      # configures VM
#      cluster_3.vm.provider :virtualbox do |c3|
#        c3.memory = 2048
#        c3.name   = "Cluster 3 Agent"
#        c3.gui    = true
#      end
#    # sets master and current agent FQDN's, hostnames and IP's
#    cluster_3.vm.provision :shell, path: "centOSBash_agent_2_ipconfig.sh"
#    # executes shell file to run bash terminal and comands
#    cluster_3.vm.provision :shell, path: "centOSBash.sh"
#    # sets the server and run interval on agent nodes
#    cluster_3.vm.provision :shell, path: "centOSBash_agent_puppet_conf.sh"
#    # create a certificate key which is sent to the server, server name in file:
#    cluster_3.vm.provision :shell, path: "centOSBash_puppet_cert_gen.sh"
#    # enables agent
#    cluster_3.vm.provision :shell, path: "centOSBash_enable.sh"
#    # initial pull of modules from master  NOTE: BREAKS VAGRANT UP NEW CONF FILE IS THE FIX ^^
#    cluster_3.vm.provision :shell, path: "centOSBash_firstrun.sh"
#    # restart the service to load the new runinterval
#    #cluster_3.vm.provision :shell, path: "centOSBash_service_restart.sh"

#  end

        # sets base box Ubuntu for third Agent
  config.vm.define "cluster_4" do |cluster_4|
    cluster_4.vm.box = "ubuntu/trusty64"
    cluster_4.vm.network "public_network", ip: "192.168.1.253"
    cluster_4.vm.hostname = "agent3evilcorp.evilcorp.com"
      # configures VM
      cluster_4.vm.provider :virtualbox do |c4|
        c4.memory = 2048
        c4.name   = "Cluster 4 Agent"
        c4.gui    = true
      end
    # sets master and current agent FQDN's, hostnames and IP's
    cluster_4.vm.provision :shell, path: "ubuntuBash_agent_3_ipconfig.sh"
    # executes shell file to run bash terminal and comands
    cluster_4.vm.provision :shell, path: "ubuntuBash.sh"
#   # sets the server and run interval on agent nodes
    cluster_4.vm.provision :shell, path: "ubuntuBash_agent_puppet_conf.sh"
    # create a certificate key which is sent to the server, server name in file:
    cluster_4.vm.provision :shell, path: "ubuntuBash_puppet_cert_gen.sh"
#    # enables agent
#    cluster_4.vm.provision :shell, path: "ubuntuBash_enable.sh"
#    # initial pull of modules from master NOTE: BREAKS VAGRANT UP NEW CONF FILE IS THE FIX ^^
#    cluster_4.vm.provision :shell, path: "ubuntuBash_firstrun.sh"
#    # restart the service to load the new runinterval
#    cluster_4.vm.provision :shell, path: "ubuntuBash_service_restart.sh"

  end

end